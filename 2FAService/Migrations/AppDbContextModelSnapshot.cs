// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TwoFactorService.Infrastructure.Persistance;

#nullable disable

namespace _2FAService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TwoFactorService.Domain.Entities.UserRecoveryCode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("HashedCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("boolean");

                    b.Property<Guid>("UserTwoFactorSettingId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserTwoFactorSettingId");

                    b.ToTable("UserRecoveryCodes");
                });

            modelBuilder.Entity("TwoFactorService.Domain.Entities.UserTwoFactorSetting", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("EncryptedSecretKey")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserTwoFactorSettings");
                });

            modelBuilder.Entity("TwoFactorService.Domain.Entities.UserRecoveryCode", b =>
                {
                    b.HasOne("TwoFactorService.Domain.Entities.UserTwoFactorSetting", "UserTwoFactorSetting")
                        .WithMany("RecoveryCodes")
                        .HasForeignKey("UserTwoFactorSettingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserTwoFactorSetting");
                });

            modelBuilder.Entity("TwoFactorService.Domain.Entities.UserTwoFactorSetting", b =>
                {
                    b.Navigation("RecoveryCodes");
                });
#pragma warning restore 612, 618
        }
    }
}
